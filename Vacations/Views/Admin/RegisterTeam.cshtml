@model Vacations.Models.TeamViewModel
@{
    IEnumerable<Vacations.Models.EmployeeViewModel> listOfEmployees = (IEnumerable<Vacations.Models.EmployeeViewModel>)ViewData["listOfEmployees"];

    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("RegisterTeam", "Admin", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <link href="~/Content/chosen.min.css" rel="stylesheet" />
    <div class="container m-0 py-3">
        <form>
            <div class="container pb-5 text-light-grey">
                <div class="row">
                    <div class="container-fluid border border-bottom-0 border-grey container-rounded-top bg-global text-white p-2 py-2">
                        <strong>Add New Team</strong>
                    </div>
                </div>
                <div class="row">
                    <div class="col-4 border border-bottom-0 border-grey  bg-dark pt-1">
                        <div class="form-group container">
                            @Html.LabelFor(m => m.TeamName, new { @class = "control-label " })
                            @Html.ValidationMessageFor(m => m.TeamName, "", new { @class = "Denied" })
                            @Html.TextBoxFor(m => m.TeamName, new { @class = "form-control bg-dark border-grey colorWhite", placeholder = "team name", autocomplete = "off" })
                        </div>
                    </div>
                    <div class="col-8 border-top border-right border-grey  bg-dark pt-1">
                        <div class="form-group container">
                            <label class="container-fluid p-0">members</label>
                            <select name="members" id="members" class="form-control team-member-select container-fluid bg-dark text-light border-grey" multiple>
                                @foreach (var employee in listOfEmployees)
                                {
                                    <option id="@employee.EmployeeID" value="@employee.EmployeeID">@employee.Name @employee.Surname</option>
                                }
                            </select>

                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-4  border border-top-0  border-grey border-bottom-rounded-left bg-dark">
                        <div class="form-group container">
                            <label>team lead</label>
                            @Html.DropDownList("employeesSelectList", null, null, new { @class = "form-control bg-dark border-grey colorWhite" })
                        </div>
                    </div>

                    <div class="col-4 border-bottom border-grey  bg-dark">
                        <div class="form-group container ">
                            <label class="invisible"></label>
                            <input onclick="window.history.back()" class="form-control bg-dark button-cancel border-grey" style="cursor:pointer; text-align:center" value="CANCEL" />
                        </div>
                    </div>
                    <div class="col-4 border-right border-bottom border-bottom-rounded-right border-grey   bg-dark ">
                        <div class="form-group container">
                            <label class="invisible"></label>
                            <input type="submit" class="form-control bg-dark button-done border-grey" style="cursor:pointer;" value="SAVE" />
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
}
@section Scripts{
    <script>
        $(function () {
            $(".team-member-select").chosen();
        })
    </script>
    <script src="~/Scripts/chosen.jquery.min.js"></script>
}
